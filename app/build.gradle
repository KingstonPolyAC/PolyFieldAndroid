apply plugin: "com.android.application"
apply plugin: "kotlin-android"

import com.android.build.OutputFile

repositories {
    google()
    mavenCentral()
}

// Temporarily build without React Native integration

def enableProguardInReleaseBuilds = true
def enableSeparateBuildPerCPUArchitecture = false

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    compileSdk 34

    namespace "com.polyfieldandroid"
    defaultConfig {
        applicationId "com.polyfieldandroid"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 42
        versionName "4.2"
    }
    
    buildFeatures {
        compose true
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.8'
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('my-release-key.keystore')
            storePassword 'polyfield'
            keyAlias 'my-key-alias'
            keyPassword 'polyfield'
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    packagingOptions {
        pickFirst "**/armeabi-v7a/libc++_shared.so"
        pickFirst "**/x86/libc++_shared.so"
        pickFirst "**/arm64-v8a/libc++_shared.so"
        pickFirst "**/x86_64/libc++_shared.so"
        pickFirst "**/x86/libjsc.so"
        pickFirst "**/armeabi-v7a/libjsc.so"
    }
}

dependencies {
    implementation files('libs/mobile.aar')
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"
    
    // Compose BOM - ensures compatible versions
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    
    // Jetpack Compose
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.runtime:runtime'
    implementation 'androidx.compose.foundation:foundation'
    implementation 'androidx.activity:activity-compose:1.8.2'
    
    // AndroidX Core
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    
    // USB and permissions
    implementation 'androidx.appcompat:appcompat:1.6.1'
    
    // Optional - for debugging
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}